{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css"],"names":["module","exports","Message","props","className","messageCss","message_container","img_container","imgbg_small","imgbg_big","avatar","src","alt","text_container","name","message","time_container","time","messageData","HW1","Affair","affair","affairStyle","btn_delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","elem","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","onBlur","span_error","GreetingContainer","users","addUserCallback","setName","setError","length","e","valueTransform","currentTarget","trim","alert","HW3","setUsers","v1","App","container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.67694b3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_delete\":\"Affairs_btn_delete__s8UdG\"};","import React from 'react';\nimport messageCss from './Message.module.css';\n\n\ntype TypePropsMessage = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction Message(props: TypePropsMessage) {\n    return (\n        <div className={messageCss.message_container}>\n            <div className={messageCss.img_container}>\n                <div className={messageCss.imgbg_small}>\n                    <div className={messageCss.imgbg_big}>\n                        <img className={messageCss.avatar} src={props.avatar} alt=\"avatar\"/>\n                    </div>   \n                </div>             \n            </div>\n            <div className={messageCss.text_container}>\n                <div>{props.name}</div>\n                <div>{props.message}</div>\n                <div className={messageCss.time_container}>\n                    <span>{props.time}</span>\n                </div>                \n            </div>    \n        </div>\n    )\n}\n\nexport default Message","import React from 'react';\nimport Message from './Message';\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Dmitii Malenkov',\n    message: 'Hello my big friends',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            {/*should work (должно работать)*/}\n\n            <Message\n               avatar={messageData.avatar} \n               name={messageData.name} \n               message={messageData.message}\n               time={messageData.time}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2';\nimport affairStyle from './Affairs.module.css';\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType \n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id);\n    }// need to fix\n\n    return (\n        <div>\n            <span>{props.affair.name}</span>\n            <button className={affairStyle.btn_delete} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { \n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => { props.setFilter(\"all\") } // need to fix\n    const setHigh = () => { props.setFilter(\"high\") }\n    const setMiddle = () => {props.setFilter(\"middle\")}\n    const setLow = () => {props.setFilter(\"low\")}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\" \n\nexport type AffairType = {\n    _id: number;\n    name: string;\n    priority: string;\n} \nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ \n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { \n    if (filter === 'all') {\n        return affairs\n    } else if(filter === \"high\") {\n        return affairs.filter(elem => elem.priority === \"high\");\n    } else if(filter === \"middle\") {\n        return affairs.filter(elem => elem.priority === \"middle\");\n    } else if (filter === \"low\") {\n        return affairs.filter(elem => elem.priority === \"low\");\n    }\n}\n// delete Affair\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { \n    return affairs.filter(affair => affair._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); \n    const [filter, setFilter] = useState<FilterType>('all');\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react';\n\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers}) => {\n    const inputClass = error ? s.error : \"\";\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} onBlur={setNameCallback} className={inputClass}/>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            <span className={s.span_error}>{error}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState, ChangeEvent} from 'react';\nimport Greeting from './Greeting';\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let valueTransform = e.currentTarget.value.trim();\n        if(valueTransform) {\n            setName(valueTransform);\n            error && setError('')\n        } else {\n            setName('');\n            setError('name is require')\n        }\n    }\n\n    const addUser = () => {\n        addUserCallback(name);\n        alert(`Hello ${name} !`)\n        setName('');\n    }\n\n    const totalUsers: number = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react';\nimport GreetingContainer from './GreetingContainer';\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        setUsers([...users, {_id: v1(), name: name}])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react';\nimport s from './App.module.css';\nimport HW1 from '../../../p2-homeworks/h1/HW1';\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <div className={s.container}>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_container\":\"Message_message_container__2f-AB\",\"img_container\":\"Message_img_container__pwHmp\",\"imgbg_small\":\"Message_imgbg_small__3v9G4\",\"imgbg_big\":\"Message_imgbg_big__1wN-V\",\"avatar\":\"Message_avatar__mCVMw\",\"text_container\":\"Message_text_container__1N7L2\",\"time_container\":\"Message_time_container__2ILIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__13lmN\",\"container\":\"App_container__29WXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__O0J15\",\"error\":\"Greeting_error__2XiDh\",\"span_error\":\"Greeting_span_error__eLXc1\"};"],"sourceRoot":""}