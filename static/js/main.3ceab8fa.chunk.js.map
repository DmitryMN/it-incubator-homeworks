{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/RoutesHW.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","messageCss","message_container","img_container","imgbg_small","imgbg_big","avatar","src","alt","text_container","name","message","time_container","time","messageData","HW1","Affair","affair","affairStyle","btn_delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","elem","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","onBlur","span_error","GreetingContainer","users","addUserCallback","setName","setError","length","e","valueTransform","currentTarget","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","homeWorkReducer","action","copyState","user","collator","Intl","Collator","sort","b","compare","payload","reverse","age","initialPeople","HW8","people","setPeople","finalPeople","p","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","getDigit","num","stop","window","clearInterval","stringTime","getHours","getMinutes","getSeconds","stringDate","getDay","getMonth","getFullYear","onMouseEnter","onMouseLeave","id","setInterval","style","HW9","Junior","JuniorPlus","PATH","RoutesHW","path","element","to","Header","HW5","App","container","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3ceab8fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_container\":\"Message_message_container__mGjdC\",\"img_container\":\"Message_img_container__QP3o7\",\"imgbg_small\":\"Message_imgbg_small__hjg8u\",\"imgbg_big\":\"Message_imgbg_big__401Ax\",\"avatar\":\"Message_avatar__kHfsR\",\"text_container\":\"Message_text_container__QsI9z\",\"time_container\":\"Message_time_container__16Cyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2edu6\",\"errorInput\":\"SuperInputText_errorInput__22_cc\",\"error\":\"SuperInputText_error__30HhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3RqaF\",\"error\":\"Greeting_error__BQ1oq\",\"span_error\":\"Greeting_span_error__2gYU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1eEyI\",\"column\":\"HW4_column__1Qnai\",\"testSpanError\":\"HW4_testSpanError__4hy39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3eaMV\",\"red\":\"SuperButton_red__2oe1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__18tx3\",\"spanClassName\":\"SuperCheckbox_spanClassName__3f45B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_delete\":\"Affairs_btn_delete__22DF7\"};","import React from 'react';\r\nimport messageCss from './Message.module.css';\r\n\r\n\r\ntype TypePropsMessage = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nfunction Message(props: TypePropsMessage) {\r\n    return (\r\n        <div className={messageCss.message_container}>\r\n            <div className={messageCss.img_container}>\r\n                <div className={messageCss.imgbg_small}>\r\n                    <div className={messageCss.imgbg_big}>\r\n                        <img className={messageCss.avatar} src={props.avatar} alt=\"avatar\"/>\r\n                    </div>   \r\n                </div>             \r\n            </div>\r\n            <div className={messageCss.text_container}>\r\n                <div>{props.name}</div>\r\n                <div>{props.message}</div>\r\n                <div className={messageCss.time_container}>\r\n                    <span>{props.time}</span>\r\n                </div>                \r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Dmitii Malenkov',\r\n    message: 'Hello my big friends',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n               avatar={messageData.avatar} \r\n               name={messageData.name} \r\n               message={messageData.message}\r\n               time={messageData.time}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport affairStyle from './Affairs.module.css';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType \r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id);\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <span>{props.affair.name}</span>\r\n            <button className={affairStyle.btn_delete} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { \r\n    data: Array<AffairType>\r\n    setFilter: (value: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => { props.setFilter(\"all\") } // need to fix\r\n    const setHigh = () => { props.setFilter(\"high\") }\r\n    const setMiddle = () => {props.setFilter(\"middle\")}\r\n    const setLow = () => {props.setFilter(\"low\")}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\" \r\n\r\nexport type AffairType = {\r\n    _id: number;\r\n    name: string;\r\n    priority: string;\r\n} \r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ \r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { \r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else if(filter === \"high\") {\r\n        return affairs.filter(elem => elem.priority === \"high\");\r\n    } else if(filter === \"middle\") {\r\n        return affairs.filter(elem => elem.priority === \"middle\");\r\n    } else if (filter === \"low\") {\r\n        return affairs.filter(elem => elem.priority === \"low\");\r\n    }\r\n}\r\n// delete Affair\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { \r\n    return affairs.filter(affair => affair._id !== _id);\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); \r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react';\r\n\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers}) => {\r\n    const inputClass = error ? s.error : \"\";\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} onBlur={setNameCallback} className={inputClass}/>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <span className={s.span_error}>{error}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState, ChangeEvent} from 'react';\r\nimport Greeting from './Greeting';\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let valueTransform = e.currentTarget.value.trim();\r\n        if(valueTransform) {\r\n            setName(valueTransform);\r\n            error && setError('')\r\n        } else {\r\n            setName('');\r\n            setError('name is require')\r\n        }\r\n    }\r\n\r\n    const addUser = () => {\r\n        addUserCallback(name);\r\n        alert(`Hello ${name} !`)\r\n        setName('');\r\n    }\r\n\r\n    const totalUsers: number = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react';\r\nimport GreetingContainer from './GreetingContainer';\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        setUsers([...users, {_id: v1(), name: name}])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // если есть пропс onChange то передать ему е (поскольку onChange не обязателен)\r\n        onChange && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n        debugger\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState('editable-span-value', ''))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => <option key={i} value={o}>{o}</option>) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n       onChange && onChange(e);\r\n       onChangeOption && onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} value={restProps.value}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i}>\r\n            <input type={'radio'} name={name} onChange={onChangeCallback} checked={o === value} value={o}/>\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div className=\"hw7\">\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {ActionType, UserType} from \"../HW8\";\r\n\r\n\r\nexport const homeWorkReducer = (state: Array<UserType>, action: ActionType): Array<UserType> => {\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            let copyState = state.map(user => ({...user}));\r\n            let collator = new Intl.Collator(\"ru\");\r\n            copyState.sort((a: UserType, b: UserType) => {\r\n                return collator.compare(a.name, b.name);\r\n            });\r\n            return action.payload === 'up' ? copyState : copyState.reverse();\r\n        }\r\n        case 'check': {\r\n            return state.filter(user => user.age > action.payload);\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport './hw8.css';\r\n\r\nexport type UserType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nexport type ActionType = {\r\n    type: string\r\n    payload: string | number\r\n}\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople) // need to fix any\r\n\r\n    const finalPeople = people.map((p: UserType) => (\r\n        <div className=\"wrapper_people\" key={p._id}>\r\n            <div>{p.name}</div>\r\n            <div>{p.age}</div>\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}));\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\r\n\r\n    return (\r\n        <div className=\"hw8\">\r\n            <hr/>\r\n            homeworks 8\r\n            {/*should work (должно работать)*/}\r\n            <div className=\"hw8_container\">\r\n                {finalPeople}\r\n                <div className=\"hw8_container_btn\">\r\n                    <SuperButton onClick={sortUp}>sort up</SuperButton>\r\n                    <SuperButton onClick={sortDown}>sort down</SuperButton>\r\n                    <SuperButton onClick={check}>check 18</SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date());\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const getDigit = (num: number) => {\r\n        return num < 10 ? '0' + num : num;\r\n    }\r\n\r\n    const stop = () => {\r\n        // stop\r\n        window.clearInterval(timerId);\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            // setDate\r\n            setDate(new Date());\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        // show\r\n        setShow(true);\r\n    }\r\n    const onMouseLeave = () => {\r\n        // close\r\n        setShow(false);\r\n    }\r\n\r\n    const stringTime = `${date.getHours()}:${getDigit(date.getMinutes())}:${getDigit(date.getSeconds())}`; // fix with date\r\n    const stringDate = `${date.getDay()}-${date.getMonth()}-${date.getFullYear()}` // fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton style={{'marginLeft': '10px'}} onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\n\r\nconst Junior = () => {\r\n    return(\r\n        <div>\r\n            <h4>Junior</h4>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;","import React from \"react\";\r\n\r\nconst JuniorPlus = () => {\r\n    return(\r\n        <div>\r\n            <h4>Junior Plus</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;","import {Routes, Route, Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    // add paths\r\n}\r\n\r\nfunction RoutesHW() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                {/*<Route path={'/'} render={() => <Redirect to={PATH.PRE_JUNIOR}/>*/}\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior />}></Route>\r\n\r\n                {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n                <Route path={PATH.JUNIOR} element={<Junior />}></Route>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus />}></Route>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route path=\"/\" element={<Navigate to={PATH.PRE_JUNIOR} />} />\r\n                <Route path=\"*\" element={<Error404 />}></Route>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoutesHW;","import React from 'react'\r\nimport './header.css';\r\nimport {NavLink as Link} from \"react-router-dom\";\r\nimport {PATH} from \"./RoutesHW\";\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <nav className=\"menu__nav\">\r\n                <ul className=\"menu__list\">\r\n                    <li>\r\n                        <Link to={PATH.PRE_JUNIOR} className=\"menu__link\">Pre-Junior</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={PATH.JUNIOR} className=\"menu__link\">Junior</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={PATH.JUNIOR_PLUS} className=\"menu__link\">Junior+</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport RoutesHW from \"./RoutesHW\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Header/>\r\n                <RoutesHW/>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react';\r\nimport s from './App.module.css';\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div className={s.container}>\r\n            <HW5/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}